/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

MainViewBase::MainViewBase() :
    radioButtonSelectedCallback(this, &MainViewBase::radioButtonSelectedCallbackHandler),
    radioButtonDeselectedCallback(this, &MainViewBase::radioButtonDeselectedCallbackHandler)
{

    backgroundBox.setPosition(0, 0, 800, 480);
    backgroundBox.setVisible(false);
    backgroundBox.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    backgroundImage.setXY(0, 0);
    backgroundImage.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));

    radioButton1.setXY(56, 25);
    radioButton1.setBitmaps(touchgfx::Bitmap(BITMAP_RADIO_BUTTON_UNSELECTED_ID), touchgfx::Bitmap(BITMAP_RADIO_BUTTON_UNSELECTED_PRESSED_ID), touchgfx::Bitmap(BITMAP_RADIO_BUTTON_SELECTED_ID), touchgfx::Bitmap(BITMAP_RADIO_BUTTON_SELECTED_PRESSED_ID));
    radioButton1.setSelected(true);
    radioButton1.setDeselectionEnabled(false);

    radioButton2.setXY(56, 78);
    radioButton2.setBitmaps(touchgfx::Bitmap(BITMAP_RADIO_BUTTON_UNSELECTED_ID), touchgfx::Bitmap(BITMAP_RADIO_BUTTON_UNSELECTED_PRESSED_ID), touchgfx::Bitmap(BITMAP_RADIO_BUTTON_SELECTED_ID), touchgfx::Bitmap(BITMAP_RADIO_BUTTON_SELECTED_PRESSED_ID));
    radioButton2.setSelected(false);
    radioButton2.setDeselectionEnabled(false);

    radioButton3.setXY(56, 129);
    radioButton3.setBitmaps(touchgfx::Bitmap(BITMAP_RADIO_BUTTON_UNSELECTED_ID), touchgfx::Bitmap(BITMAP_RADIO_BUTTON_UNSELECTED_PRESSED_ID), touchgfx::Bitmap(BITMAP_RADIO_BUTTON_SELECTED_ID), touchgfx::Bitmap(BITMAP_RADIO_BUTTON_SELECTED_PRESSED_ID));
    radioButton3.setSelected(false);
    radioButton3.setDeselectionEnabled(false);

    radioButton4.setXY(56, 181);
    radioButton4.setBitmaps(touchgfx::Bitmap(BITMAP_RADIO_BUTTON_UNSELECTED_ID), touchgfx::Bitmap(BITMAP_RADIO_BUTTON_UNSELECTED_PRESSED_ID), touchgfx::Bitmap(BITMAP_RADIO_BUTTON_SELECTED_ID), touchgfx::Bitmap(BITMAP_RADIO_BUTTON_SELECTED_PRESSED_ID));
    radioButton4.setSelected(false);
    radioButton4.setDeselectionEnabled(false);

    selectedText.setXY(114, 137);
    selectedText.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    selectedText.setLinespacing(0);
    selectedTextBuffer[0] = 0;
    selectedText.setWildcard(selectedTextBuffer);
    selectedText.resizeToCurrentText();
    selectedText.setTypedText(touchgfx::TypedText(T_TEXTID1));

    deselectedText.setXY(114, 189);
    deselectedText.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    deselectedText.setLinespacing(0);
    deselectedTextBuffer[0] = 0;
    deselectedText.setWildcard(deselectedTextBuffer);
    deselectedText.resizeToCurrentText();
    deselectedText.setTypedText(touchgfx::TypedText(T_TEXTID2));

    add(backgroundBox);
    add(backgroundImage);
    add(radioButton1);
    add(radioButton2);
    add(radioButton3);
    add(radioButton4);
    add(selectedText);
    add(deselectedText);
    radioButtonGroup.add(radioButton1);
    radioButtonGroup.add(radioButton2);
    radioButtonGroup.add(radioButton3);
    radioButtonGroup.add(radioButton4);
    radioButtonGroup.setRadioButtonSelectedHandler(radioButtonSelectedCallback);
    radioButtonGroup.setRadioButtonDeselectedHandler(radioButtonDeselectedCallback);
}

void MainViewBase::setupScreen()
{

}

void MainViewBase::radioButtonSelectedCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &radioButton1)
    {
        //RadioButton1Selected
        //When radioButton1 selected execute C++ code
        //Execute C++ code
        Unicode::snprintf(selectedTextBuffer, 4, "%d", 1);
        selectedText.resizeToCurrentText();
        selectedText.invalidate();
    }
    else if (&src == &radioButton2)
    {
        //RadioButton2Selected
        //When radioButton2 selected execute C++ code
        //Execute C++ code
        Unicode::snprintf(selectedTextBuffer, 4, "%d", 2);
        selectedText.resizeToCurrentText();
        selectedText.invalidate();
    }
    else if (&src == &radioButton3)
    {
        //RadioButton3Selected
        //When radioButton3 selected execute C++ code
        //Execute C++ code
        Unicode::snprintf(selectedTextBuffer, 4, "%d", 3);
        selectedText.resizeToCurrentText();
        selectedText.invalidate();
    }
    else if (&src == &radioButton4)
    {
        //RadioButton4Selected
        //When radioButton4 selected execute C++ code
        //Execute C++ code
        Unicode::snprintf(selectedTextBuffer, 4, "%d", 4);
        selectedText.resizeToCurrentText();
        selectedText.invalidate();
    }
}

void MainViewBase::radioButtonDeselectedCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &radioButton1)
    {
        //RadioButton1Deselected
        //When radioButton1 deselected execute C++ code
        //Execute C++ code
        Unicode::snprintf(deselectedTextBuffer, 4, "%d", 1);
        deselectedText.resizeToCurrentText();
        deselectedText.invalidate();
    }
    else if (&src == &radioButton2)
    {
        //RadioButton2Deselected
        //When radioButton2 deselected execute C++ code
        //Execute C++ code
        Unicode::snprintf(deselectedTextBuffer, 4, "%d", 2);
        deselectedText.resizeToCurrentText();
        deselectedText.invalidate();
    }
    else if (&src == &radioButton3)
    {
        //RadioButton3Deselected
        //When radioButton3 deselected execute C++ code
        //Execute C++ code
        Unicode::snprintf(deselectedTextBuffer, 4, "%d", 3);
        deselectedText.resizeToCurrentText();
        deselectedText.invalidate();
    }
    else if (&src == &radioButton4)
    {
        //RadioButton4Deselected
        //When radioButton4 deselected execute C++ code
        //Execute C++ code
        Unicode::snprintf(deselectedTextBuffer, 4, "%d", 4);
        deselectedText.resizeToCurrentText();
        deselectedText.invalidate();
    }
}
